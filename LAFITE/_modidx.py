# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/LAFITE/',
                'doc_host': 'https://zjzace.github.io',
                'git_url': 'https://github.com/TF-Chan-Lab/LAFITE/tree/main/',
                'lib_path': 'LAFITE'},
  'syms': { 'LAFITE.lafite_wrapper': { 'LAFITE.lafite_wrapper.LafiteWrapper': ('wrapper.html#lafitewrapper', 'LAFITE/lafite_wrapper.py'),
                                       'LAFITE.lafite_wrapper.LafiteWrapper.__init__': ( 'wrapper.html#lafitewrapper.__init__',
                                                                                         'LAFITE/lafite_wrapper.py'),
                                       'LAFITE.lafite_wrapper.LafiteWrapper.revisit_parameter': ( 'wrapper.html#lafitewrapper.revisit_parameter',
                                                                                                  'LAFITE/lafite_wrapper.py'),
                                       'LAFITE.lafite_wrapper.LafiteWrapper.run_lafite': ( 'wrapper.html#lafitewrapper.run_lafite',
                                                                                           'LAFITE/lafite_wrapper.py'),
                                       'LAFITE.lafite_wrapper.main': ('wrapper.html#main', 'LAFITE/lafite_wrapper.py')},
            'LAFITE.output': { 'LAFITE.output.OutputAssembly': ('output.html#outputassembly', 'LAFITE/output.py'),
                               'LAFITE.output.OutputAssembly.__init__': ('output.html#outputassembly.__init__', 'LAFITE/output.py'),
                               'LAFITE.output.OutputAssembly.idx_rearrange': ( 'output.html#outputassembly.idx_rearrange',
                                                                               'LAFITE/output.py'),
                               'LAFITE.output.OutputAssembly.write_out': ('output.html#outputassembly.write_out', 'LAFITE/output.py'),
                               'LAFITE.output.assembly_output': ('output.html#assembly_output', 'LAFITE/output.py'),
                               'LAFITE.output.idx_rearrange': ('output.html#idx_rearrange', 'LAFITE/output.py')},
            'LAFITE.preprocessing': { 'LAFITE.preprocessing.PolyAFinder': ('preprocessing.html#polyafinder', 'LAFITE/preprocessing.py'),
                                      'LAFITE.preprocessing.PolyAFinder.__init__': ( 'preprocessing.html#polyafinder.__init__',
                                                                                     'LAFITE/preprocessing.py'),
                                      'LAFITE.preprocessing.PolyAFinder.find_polyA_motif': ( 'preprocessing.html#polyafinder.find_polya_motif',
                                                                                             'LAFITE/preprocessing.py'),
                                      'LAFITE.preprocessing.PolyAFinder.polyA_motif_import': ( 'preprocessing.html#polyafinder.polya_motif_import',
                                                                                               'LAFITE/preprocessing.py'),
                                      'LAFITE.preprocessing.PolyAFinder.polya_estimation': ( 'preprocessing.html#polyafinder.polya_estimation',
                                                                                             'LAFITE/preprocessing.py'),
                                      'LAFITE.preprocessing.bed_block_to_splicing': ( 'preprocessing.html#bed_block_to_splicing',
                                                                                      'LAFITE/preprocessing.py'),
                                      'LAFITE.preprocessing.polya_signal_import': ( 'preprocessing.html#polya_signal_import',
                                                                                    'LAFITE/preprocessing.py'),
                                      'LAFITE.preprocessing.read_grouping': ('preprocessing.html#read_grouping', 'LAFITE/preprocessing.py'),
                                      'LAFITE.preprocessing.split_bed_line': ( 'preprocessing.html#split_bed_line',
                                                                               'LAFITE/preprocessing.py')},
            'LAFITE.read_collapsing': { 'LAFITE.read_collapsing.CoCoWrapper': ('collapsing.html#cocowrapper', 'LAFITE/read_collapsing.py'),
                                        'LAFITE.read_collapsing.CoCoWrapper.__init__': ( 'collapsing.html#cocowrapper.__init__',
                                                                                         'LAFITE/read_collapsing.py'),
                                        'LAFITE.read_collapsing.CoCoWrapper.job_compute': ( 'collapsing.html#cocowrapper.job_compute',
                                                                                            'LAFITE/read_collapsing.py'),
                                        'LAFITE.read_collapsing.CoCoWrapper.result_collection': ( 'collapsing.html#cocowrapper.result_collection',
                                                                                                  'LAFITE/read_collapsing.py'),
                                        'LAFITE.read_collapsing.RawAttributeCollection': ( 'collapsing.html#rawattributecollection',
                                                                                           'LAFITE/read_collapsing.py'),
                                        'LAFITE.read_collapsing.ReadCorrectionColappse': ( 'collapsing.html#readcorrectioncolappse',
                                                                                           'LAFITE/read_collapsing.py'),
                                        'LAFITE.read_collapsing.ReadCorrectionColappse.RTS_refrence_distance': ( 'collapsing.html#readcorrectioncolappse.rts_refrence_distance',
                                                                                                                 'LAFITE/read_collapsing.py'),
                                        'LAFITE.read_collapsing.ReadCorrectionColappse.__init__': ( 'collapsing.html#readcorrectioncolappse.__init__',
                                                                                                    'LAFITE/read_collapsing.py'),
                                        'LAFITE.read_collapsing.ReadCorrectionColappse.coco_operation': ( 'collapsing.html#readcorrectioncolappse.coco_operation',
                                                                                                          'LAFITE/read_collapsing.py'),
                                        'LAFITE.read_collapsing.ReadCorrectionColappse.multi_exon_read_collapse': ( 'collapsing.html#readcorrectioncolappse.multi_exon_read_collapse',
                                                                                                                    'LAFITE/read_collapsing.py'),
                                        'LAFITE.read_collapsing.ReadCorrectionColappse.multi_exon_read_correction': ( 'collapsing.html#readcorrectioncolappse.multi_exon_read_correction',
                                                                                                                      'LAFITE/read_collapsing.py'),
                                        'LAFITE.read_collapsing.ReadCorrectionColappse.single_exon_read_collapse': ( 'collapsing.html#readcorrectioncolappse.single_exon_read_collapse',
                                                                                                                     'LAFITE/read_collapsing.py'),
                                        'LAFITE.read_collapsing.splicing_to_bed_block': ( 'collapsing.html#splicing_to_bed_block',
                                                                                          'LAFITE/read_collapsing.py')},
            'LAFITE.reference_processing': { 'LAFITE.reference_processing.RefAnnotationExtraction': ( 'reference_processing.html#refannotationextraction',
                                                                                                      'LAFITE/reference_processing.py'),
                                             'LAFITE.reference_processing.RefAnnotationExtraction.__init__': ( 'reference_processing.html#refannotationextraction.__init__',
                                                                                                               'LAFITE/reference_processing.py'),
                                             'LAFITE.reference_processing.RefAnnotationExtraction.annotation_extraction': ( 'reference_processing.html#refannotationextraction.annotation_extraction',
                                                                                                                            'LAFITE/reference_processing.py'),
                                             'LAFITE.reference_processing.RefAnnotationExtraction.annotation_sorting': ( 'reference_processing.html#refannotationextraction.annotation_sorting',
                                                                                                                         'LAFITE/reference_processing.py'),
                                             'LAFITE.reference_processing.RefProcessWrapper': ( 'reference_processing.html#refprocesswrapper',
                                                                                                'LAFITE/reference_processing.py'),
                                             'LAFITE.reference_processing.RefProcessWrapper.__init__': ( 'reference_processing.html#refprocesswrapper.__init__',
                                                                                                         'LAFITE/reference_processing.py'),
                                             'LAFITE.reference_processing.RefProcessWrapper.process': ( 'reference_processing.html#refprocesswrapper.process',
                                                                                                        'LAFITE/reference_processing.py'),
                                             'LAFITE.reference_processing.RefProcessWrapper.result_collection': ( 'reference_processing.html#refprocesswrapper.result_collection',
                                                                                                                  'LAFITE/reference_processing.py'),
                                             'LAFITE.reference_processing.annotation_reshape': ( 'reference_processing.html#annotation_reshape',
                                                                                                 'LAFITE/reference_processing.py'),
                                             'LAFITE.reference_processing.bed_block_to_splicing': ( 'reference_processing.html#bed_block_to_splicing',
                                                                                                    'LAFITE/reference_processing.py'),
                                             'LAFITE.reference_processing.cage_tss_import': ( 'reference_processing.html#cage_tss_import',
                                                                                              'LAFITE/reference_processing.py'),
                                             'LAFITE.reference_processing.gtf2splicing': ( 'reference_processing.html#gtf2splicing',
                                                                                           'LAFITE/reference_processing.py'),
                                             'LAFITE.reference_processing.gtf_line_split': ( 'reference_processing.html#gtf_line_split',
                                                                                             'LAFITE/reference_processing.py'),
                                             'LAFITE.reference_processing.read_assignment': ( 'reference_processing.html#read_assignment',
                                                                                              'LAFITE/reference_processing.py'),
                                             'LAFITE.reference_processing.short_reads_sj_import': ( 'reference_processing.html#short_reads_sj_import',
                                                                                                    'LAFITE/reference_processing.py'),
                                             'LAFITE.reference_processing.split_bed_line': ( 'reference_processing.html#split_bed_line',
                                                                                             'LAFITE/reference_processing.py')},
            'LAFITE.refine': { 'LAFITE.refine.AttributeCollection': ('refine.html#attributecollection', 'LAFITE/refine.py'),
                               'LAFITE.refine.MultiExonReadRefine': ('refine.html#multiexonreadrefine', 'LAFITE/refine.py'),
                               'LAFITE.refine.MultiExonReadRefine.ISM_NIC_sorting': ( 'refine.html#multiexonreadrefine.ism_nic_sorting',
                                                                                      'LAFITE/refine.py'),
                               'LAFITE.refine.MultiExonReadRefine.__init__': ( 'refine.html#multiexonreadrefine.__init__',
                                                                               'LAFITE/refine.py'),
                               'LAFITE.refine.MultiExonReadRefine.closest_ref_trans': ( 'refine.html#multiexonreadrefine.closest_ref_trans',
                                                                                        'LAFITE/refine.py'),
                               'LAFITE.refine.MultiExonReadRefine.main_refine': ( 'refine.html#multiexonreadrefine.main_refine',
                                                                                  'LAFITE/refine.py'),
                               'LAFITE.refine.MultiExonReadRefine.secondary_refine': ( 'refine.html#multiexonreadrefine.secondary_refine',
                                                                                       'LAFITE/refine.py'),
                               'LAFITE.refine.MultiExonReadRefine.trucated_reads_filtering': ( 'refine.html#multiexonreadrefine.trucated_reads_filtering',
                                                                                               'LAFITE/refine.py'),
                               'LAFITE.refine.RefineWrapper': ('refine.html#refinewrapper', 'LAFITE/refine.py'),
                               'LAFITE.refine.RefineWrapper.__init__': ('refine.html#refinewrapper.__init__', 'LAFITE/refine.py'),
                               'LAFITE.refine.RefineWrapper.result_collection': ( 'refine.html#refinewrapper.result_collection',
                                                                                  'LAFITE/refine.py'),
                               'LAFITE.refine.RefineWrapper.run1': ('refine.html#refinewrapper.run1', 'LAFITE/refine.py'),
                               'LAFITE.refine.RefineWrapper.run2': ('refine.html#refinewrapper.run2', 'LAFITE/refine.py'),
                               'LAFITE.refine.SingleExonReadRefine': ('refine.html#singleexonreadrefine', 'LAFITE/refine.py'),
                               'LAFITE.refine.SingleExonReadRefine.__init__': ( 'refine.html#singleexonreadrefine.__init__',
                                                                                'LAFITE/refine.py'),
                               'LAFITE.refine.SingleExonReadRefine.refine': ('refine.html#singleexonreadrefine.refine', 'LAFITE/refine.py'),
                               'LAFITE.refine.SingleExonReadRefine.single_exon_refine': ( 'refine.html#singleexonreadrefine.single_exon_refine',
                                                                                          'LAFITE/refine.py')},
            'LAFITE.tailFinder': { 'LAFITE.tailFinder.AlternativeTerminalFinder': ( 'tailfinder.html#alternativeterminalfinder',
                                                                                    'LAFITE/tailFinder.py'),
                                   'LAFITE.tailFinder.AlternativeTerminalFinder.__init__': ( 'tailfinder.html#alternativeterminalfinder.__init__',
                                                                                             'LAFITE/tailFinder.py'),
                                   'LAFITE.tailFinder.AlternativeTerminalFinder.optimal_k': ( 'tailfinder.html#alternativeterminalfinder.optimal_k',
                                                                                              'LAFITE/tailFinder.py'),
                                   'LAFITE.tailFinder.AlternativeTerminalFinder.terminal_cluster': ( 'tailfinder.html#alternativeterminalfinder.terminal_cluster',
                                                                                                     'LAFITE/tailFinder.py'),
                                   'LAFITE.tailFinder.TailFinderWrapper': ('tailfinder.html#tailfinderwrapper', 'LAFITE/tailFinder.py'),
                                   'LAFITE.tailFinder.TailFinderWrapper.__init__': ( 'tailfinder.html#tailfinderwrapper.__init__',
                                                                                     'LAFITE/tailFinder.py'),
                                   'LAFITE.tailFinder.TailFinderWrapper.job_precompute': ( 'tailfinder.html#tailfinderwrapper.job_precompute',
                                                                                           'LAFITE/tailFinder.py'),
                                   'LAFITE.tailFinder.TailFinderWrapper.result_collection': ( 'tailfinder.html#tailfinderwrapper.result_collection',
                                                                                              'LAFITE/tailFinder.py'),
                                   'LAFITE.tailFinder.TailFinderWrapper.return_extremum': ( 'tailfinder.html#tailfinderwrapper.return_extremum',
                                                                                            'LAFITE/tailFinder.py'),
                                   'LAFITE.tailFinder.TailFinderWrapper.run': ( 'tailfinder.html#tailfinderwrapper.run',
                                                                                'LAFITE/tailFinder.py')},
            'LAFITE.utils': { 'LAFITE.utils.Vividict': ('utils.html#vividict', 'LAFITE/utils.py'),
                              'LAFITE.utils.Vividict.__missing__': ('utils.html#vividict.__missing__', 'LAFITE/utils.py'),
                              'LAFITE.utils.bam2bed': ('utils.html#bam2bed', 'LAFITE/utils.py'),
                              'LAFITE.utils.cmd_execution': ('utils.html#cmd_execution', 'LAFITE/utils.py'),
                              'LAFITE.utils.keep_tmp_file': ('utils.html#keep_tmp_file', 'LAFITE/utils.py'),
                              'LAFITE.utils.loc_distance': ('utils.html#loc_distance', 'LAFITE/utils.py'),
                              'LAFITE.utils.temp_dir_creation': ('utils.html#temp_dir_creation', 'LAFITE/utils.py')}}}
